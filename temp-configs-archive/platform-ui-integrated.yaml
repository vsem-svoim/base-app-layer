---
apiVersion: v1
kind: ConfigMap
metadata:
  name: platform-ui-config
  namespace: platform-ui
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        
        # Main dashboard
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ =404;
        }
        
        # ArgoCD proxy
        location /argocd/ {
            proxy_pass http://argocd-server.argocd.svc.cluster.local/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            # Handle ArgoCD specific headers
            proxy_set_header Accept-Encoding "";
            sub_filter_once off;
            sub_filter 'href="/' 'href="/argocd/';
            sub_filter 'src="/' 'src="/argocd/';
            sub_filter_types text/css text/javascript application/javascript;
        }
        
        # Grafana proxy
        location /grafana/ {
            proxy_pass http://grafana.platform-monitoring.svc.cluster.local:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/grafana/(.*)$ /$1 break;
        }
        
        # Prometheus proxy
        location /prometheus/ {
            proxy_pass http://prometheus.platform-monitoring.svc.cluster.local:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/prometheus/(.*)$ /$1 break;
        }
        
        # Kibana proxy
        location /kibana/ {
            proxy_pass http://kibana.platform-logging.svc.cluster.local:5601/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/kibana/(.*)$ /$1 break;
        }
        
        # Airflow proxy
        location /airflow/ {
            proxy_pass http://airflow.platform-orchestration.svc.cluster.local:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/airflow/(.*)$ /$1 break;
        }
        
        # MLflow proxy
        location /mlflow/ {
            proxy_pass http://mlflow.platform-orchestration.svc.cluster.local:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/mlflow/(.*)$ /$1 break;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>BASE Platform - Integrated Dashboard</title>
        <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body { 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                min-height: 100vh;
                color: #333;
            }
            .header {
                background: rgba(255,255,255,0.95);
                backdrop-filter: blur(10px);
                padding: 20px 0;
                box-shadow: 0 2px 20px rgba(0,0,0,0.1);
                position: sticky;
                top: 0;
                z-index: 100;
            }
            .container {
                max-width: 1400px;
                margin: 0 auto;
                padding: 0 20px;
            }
            .header h1 {
                text-align: center;
                color: #2c3e50;
                font-size: 2.5rem;
                font-weight: 300;
                margin-bottom: 10px;
            }
            .status-bar {
                display: flex;
                justify-content: center;
                gap: 30px;
                margin-top: 15px;
                flex-wrap: wrap;
            }
            .status-item {
                display: flex;
                align-items: center;
                gap: 8px;
                font-size: 14px;
                color: #666;
            }
            .status-dot {
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: #27ae60;
                box-shadow: 0 0 10px rgba(39, 174, 96, 0.4);
            }
            .services-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
                gap: 25px;
                margin: 40px auto;
                max-width: 1400px;
                padding: 0 20px;
            }
            .service-card {
                background: rgba(255,255,255,0.95);
                backdrop-filter: blur(10px);
                border-radius: 15px;
                padding: 25px;
                box-shadow: 0 8px 32px rgba(0,0,0,0.1);
                transition: all 0.3s ease;
                border: 1px solid rgba(255,255,255,0.2);
                position: relative;
                overflow: hidden;
            }
            .service-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 15px 45px rgba(0,0,0,0.15);
            }
            .service-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #667eea, #764ba2);
            }
            .service-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 15px;
            }
            .service-name {
                font-size: 1.4rem;
                font-weight: 600;
                color: #2c3e50;
            }
            .service-status {
                padding: 4px 12px;
                border-radius: 20px;
                font-size: 12px;
                font-weight: 500;
                background: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            .service-description {
                color: #666;
                margin-bottom: 20px;
                line-height: 1.5;
            }
            .service-links {
                display: flex;
                gap: 10px;
                flex-wrap: wrap;
            }
            .service-link {
                display: inline-flex;
                align-items: center;
                gap: 6px;
                padding: 10px 16px;
                background: linear-gradient(135deg, #667eea, #764ba2);
                color: white;
                text-decoration: none;
                border-radius: 8px;
                font-size: 14px;
                font-weight: 500;
                transition: all 0.2s ease;
                box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);
            }
            .service-link:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
            }
            .service-link:active {
                transform: translateY(0);
            }
            .stats {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 20px;
                margin: 40px auto;
                max-width: 1000px;
                padding: 0 20px;
            }
            .stat-card {
                background: rgba(255,255,255,0.9);
                backdrop-filter: blur(10px);
                padding: 25px;
                border-radius: 12px;
                text-align: center;
                box-shadow: 0 5px 25px rgba(0,0,0,0.1);
            }
            .stat-number {
                font-size: 2.5rem;
                font-weight: 700;
                color: #667eea;
                margin-bottom: 8px;
            }
            .stat-label {
                color: #666;
                font-size: 14px;
                text-transform: uppercase;
                letter-spacing: 1px;
            }
            .footer {
                text-align: center;
                padding: 40px 20px;
                color: rgba(255,255,255,0.8);
                background: rgba(0,0,0,0.1);
                margin-top: 60px;
            }
            @media (max-width: 768px) {
                .header h1 { font-size: 2rem; }
                .status-bar { flex-direction: column; gap: 15px; }
                .services-grid { grid-template-columns: 1fr; }
                .service-links { flex-direction: column; }
            }
        </style>
    </head>
    <body>
        <div class="header">
            <div class="container">
                <h1>BASE App Layer Platform</h1>
                <div class="status-bar">
                    <div class="status-item">
                        <div class="status-dot"></div>
                        <span>Platform Status: Operational</span>
                    </div>
                    <div class="status-item">
                        <div class="status-dot"></div>
                        <span>Services: 17 Running</span>
                    </div>
                    <div class="status-item">
                        <div class="status-dot"></div>
                        <span>Clusters: 2 Active</span>
                    </div>
                    <div class="status-item">
                        <div class="status-dot"></div>
                        <span>Waves: 0-3 Complete</span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="stats">
            <div class="stat-card">
                <div class="stat-number">75%</div>
                <div class="stat-label">Platform Complete</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">4</div>
                <div class="stat-label">Deployment Waves</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">17</div>
                <div class="stat-label">Active Services</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">2</div>
                <div class="stat-label">EKS Clusters</div>
            </div>
        </div>
        
        <div class="services-grid">
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">ArgoCD</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    GitOps continuous deployment controller managing application lifecycle and automated deployments
                </div>
                <div class="service-links">
                    <a href="/argocd" class="service-link">
                        🚀 Open ArgoCD Dashboard
                    </a>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">Grafana</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Metrics visualization and monitoring dashboards with real-time cluster insights
                </div>
                <div class="service-links">
                    <a href="/grafana" class="service-link">
                        📊 Open Grafana Dashboard
                    </a>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">Prometheus</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Metrics collection and alerting system monitoring cluster and application performance
                </div>
                <div class="service-links">
                    <a href="/prometheus" class="service-link">
                        🔍 Open Prometheus UI
                    </a>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">Kibana</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Log analysis and visualization interface for centralized logging and troubleshooting
                </div>
                <div class="service-links">
                    <a href="/kibana" class="service-link">
                        📈 Open Kibana Dashboard
                    </a>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">Airflow</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Workflow orchestration platform for managing and scheduling data processing pipelines
                </div>
                <div class="service-links">
                    <a href="/airflow" class="service-link">
                        🔄 Open Airflow UI
                    </a>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">MLflow</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Machine learning lifecycle management for experiment tracking and model deployment
                </div>
                <div class="service-links">
                    <a href="/mlflow" class="service-link">
                        🤖 Open MLflow UI
                    </a>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">Vault</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Secrets management and secure credential storage for application authentication
                </div>
                <div class="service-links">
                    <span class="service-link" style="background: #6c757d; cursor: default;">
                        🔐 Internal Access Only
                    </span>
                </div>
            </div>
            
            <div class="service-card">
                <div class="service-header">
                    <div class="service-name">Istio Service Mesh</div>
                    <div class="service-status">Running</div>
                </div>
                <div class="service-description">
                    Service mesh providing traffic management, security, and observability for microservices
                </div>
                <div class="service-links">
                    <span class="service-link" style="background: #6c757d; cursor: default;">
                        🌐 Service Mesh Layer
                    </span>
                </div>
            </div>
        </div>
        
        <div class="footer">
            <div class="container">
                <p>BASE App Layer - Enterprise Data Platform | Wave-based GitOps Deployment</p>
                <p style="margin-top: 10px; font-size: 14px; opacity: 0.8;">
                    Infrastructure: AWS EKS • Orchestration: Kubernetes • Service Mesh: Istio 1.27.0 • GitOps: ArgoCD
                </p>
            </div>
        </div>
        
        <script>
            // Auto-refresh status every 30 seconds
            setInterval(function() {
                fetch('/health')
                    .then(response => {
                        if (response.ok) {
                            document.querySelectorAll('.status-dot').forEach(dot => {
                                dot.style.background = '#27ae60';
                                dot.style.boxShadow = '0 0 10px rgba(39, 174, 96, 0.4)';
                            });
                        }
                    })
                    .catch(() => {
                        document.querySelectorAll('.status-dot').forEach(dot => {
                            dot.style.background = '#e74c3c';
                            dot.style.boxShadow = '0 0 10px rgba(231, 76, 60, 0.4)';
                        });
                    });
            }, 30000);
        </script>
    </body>
    </html>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-ui
  namespace: platform-ui
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform-ui
  template:
    metadata:
      labels:
        app: platform-ui
    spec:
      containers:
      - name: platform-ui
        image: nginx:1.25
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: html
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: platform-ui-config
      - name: html
        configMap:
          name: platform-ui-config
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: platform-ui-ingress
  namespace: platform-ui
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/group.name: platform-alb
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: platform-ui
            port:
              number: 80