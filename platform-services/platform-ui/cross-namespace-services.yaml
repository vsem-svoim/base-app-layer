apiVersion: v1
kind: Service
metadata:
  name: vault-proxy
  namespace: platform-ui
  labels:
    app: vault-proxy
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8200
    targetPort: 8200
    protocol: TCP
  selector:
    app: vault-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-proxy
  namespace: platform-ui
  labels:
    app: vault-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vault-proxy
  template:
    metadata:
      labels:
        app: vault-proxy
    spec:
      containers:
      - name: nginx-proxy
        image: nginx:1.25-alpine
        ports:
        - containerPort: 8200
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: nginx-config
        configMap:
          name: vault-proxy-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-proxy-config
  namespace: platform-ui
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        upstream vault_backend {
            server vault.vault.svc.cluster.local:8200;
        }
        server {
            listen 8200;
            location / {
                proxy_pass http://vault_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: platform-ui
spec:
  type: ExternalName
  externalName: argocd-server.argocd.svc.cluster.local
  ports:
  - name: http
    port: 80
    targetPort: 8080