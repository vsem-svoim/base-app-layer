apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: data-ingestion-agents
  namespace: argocd
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: agents
    app.kubernetes.io/part-of: base-ingestion-apps
spec:
  project: base-layer
  source:
    repoURL: https://github.com/vsem-svoim/base-app-layer.git
    path: data_ingestion/agents
    targetRevision: HEAD
    kustomize:
      images:
      - name: base/data-collector:v2.5.0-fixed
        newName: python
        newTag: "3.11-slim"
      - name: base/data-connector:v2.5.0-fixed
        newName: python
        newTag: "3.11-slim"
      - name: base/data-converter:v2.5.0-fixed
        newName: python
        newTag: "3.11-slim"
      - name: base/data-fetch-retry:v2.5.0-fixed
        newName: python
        newTag: "3.11-slim"
      - name: base/data-merger:v2.5.0-analytics-fixed
        newName: python
        newTag: "3.11-slim"
      - name: base/data-scheduler:v2.5.0-analytics-fixed
        newName: python
        newTag: "3.11-slim"
      replicas:
      - name: base-data-ingestion-agent-data-collector
        count: 2  # Higher for critical data collection
      - name: base-data-ingestion-agent-data-connector
        count: 2  # Higher for connection management
      - name: base-data-ingestion-agent-data-converter
        count: 3  # Highest for data processing workload
      - name: base-data-ingestion-agent-data-fetch-retry
        count: 1  # Single instance for retry coordination
      - name: base-data-ingestion-agent-data-merger
        count: 2  # Higher for merge operations
      - name: base-data-ingestion-agent-data-scheduler
        count: 1  # Single scheduler instance
      patches:
      # AI Agent base configuration
      - target:
          kind: Deployment
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/command
            value: ["python", "-c"]
          - op: replace
            path: /spec/template/spec/containers/0/args
            value: ["import asyncio, logging, os; logging.basicConfig(level='INFO'); print('AI Agent starting...'); asyncio.run(asyncio.sleep(999999))"]
      # Data Collector AI Agent (higher resources for collection tasks)
      - target:
          kind: Deployment
          name: base-data-ingestion-agent-data-collector
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/cpu
            value: 200m
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/memory
            value: 512Mi
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/cpu
            value: 1000m
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/memory
            value: 2Gi
          - op: add
            path: /spec/template/spec/containers/0/env
            value:
              - name: AGENT_TYPE
                value: "data-collector"
              - name: AI_MODEL
                value: "collection-intelligence"
      # Data Connector AI Agent
      - target:
          kind: Deployment
          name: base-data-ingestion-agent-data-connector
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/cpu
            value: 150m
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/memory
            value: 256Mi
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/cpu
            value: 500m
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/memory
            value: 1Gi
          - op: add
            path: /spec/template/spec/containers/0/env
            value:
              - name: AGENT_TYPE
                value: "data-connector"
              - name: AI_MODEL
                value: "connection-optimization"
      # Data Converter AI Agent (highest resources for processing)
      - target:
          kind: Deployment
          name: base-data-ingestion-agent-data-converter
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/cpu
            value: 300m
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/memory
            value: 1Gi
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/cpu
            value: 1500m
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/memory
            value: 4Gi
          - op: add
            path: /spec/template/spec/containers/0/env
            value:
              - name: AGENT_TYPE
                value: "data-converter"
              - name: AI_MODEL
                value: "format-intelligence"
      # Data Merger AI Agent
      - target:
          kind: Deployment
          name: base-data-ingestion-agent-data-merger
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/cpu
            value: 250m
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/memory
            value: 512Mi
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/cpu
            value: 1000m
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/memory
            value: 2Gi
          - op: add
            path: /spec/template/spec/containers/0/env
            value:
              - name: AGENT_TYPE
                value: "data-merger"
              - name: AI_MODEL
                value: "merge-deduplication"
      # Data Scheduler AI Agent
      - target:
          kind: Deployment
          name: base-data-ingestion-agent-data-scheduler
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/cpu
            value: 150m
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/memory
            value: 256Mi
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/cpu
            value: 500m
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/memory
            value: 1Gi
          - op: add
            path: /spec/template/spec/containers/0/env
            value:
              - name: AGENT_TYPE
                value: "data-scheduler"
              - name: AI_MODEL
                value: "scheduling-intelligence"
      # Data Fetch Retry AI Agent (lightweight for retry coordination)
      - target:
          kind: Deployment
          name: base-data-ingestion-agent-data-fetch-retry
        patch: |-
          - op: replace
            path: /spec/template/spec/containers/0/command
            value: ["python", "-c"]
          - op: replace
            path: /spec/template/spec/containers/0/args
            value: ["import asyncio, logging; logging.basicConfig(level='INFO'); logger = logging.getLogger('retry-agent'); async def retry_logic(): logger.info('ðŸ¤– AI Retry Agent started'); while True: logger.info('ðŸ”„ Processing retry intelligence...'); await asyncio.sleep(30); asyncio.run(retry_logic())"]
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/cpu
            value: 100m
          - op: replace
            path: /spec/template/spec/containers/0/resources/requests/memory
            value: 128Mi
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/cpu
            value: 300m
          - op: replace
            path: /spec/template/spec/containers/0/resources/limits/memory
            value: 512Mi
          - op: add
            path: /spec/template/spec/containers/0/env
            value:
              - name: AGENT_TYPE
                value: "data-fetch-retry"
              - name: AI_MODEL
                value: "retry-intelligence"
      # DLQ Processor CronJob with Python
      - target:
          kind: CronJob
          name: base-data-fetch-retry-dlq-processor
        patch: |-
          - op: replace
            path: /spec/jobTemplate/spec/template/spec/containers/0/image
            value: python:3.11-slim
          - op: replace
            path: /spec/jobTemplate/spec/template/spec/containers/0/command
            value: ["python", "-c"]
          - op: replace
            path: /spec/jobTemplate/spec/template/spec/containers/0/args
            value: ["import logging, time; logging.basicConfig(level='INFO'); logger = logging.getLogger('dlq-processor'); logger.info('ðŸ¤– AI DLQ Processor started'); logger.info('ðŸ“Š Processing dead letter queue with AI...'); time.sleep(30); logger.info('âœ… DLQ processing completed')"]
      commonLabels:
        ai-agent: "true"
        runtime: python-3.11
        agent-framework: data-ingestion
        deployment-mode: ai-agents
        cloud.provider: aws
  destination:
    server: https://kubernetes.default.svc
    namespace: base-data-ingestion
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: data-ingestion-configs
  namespace: argocd
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: configs
    app.kubernetes.io/part-of: base-ingestion-apps
spec:
  project: base-layer
  source:
    repoURL: https://github.com/vsem-svoim/base-app-layer.git
    path: data_ingestion/configs
    targetRevision: HEAD
  destination:
    server: https://kubernetes.default.svc
    namespace: base-data-ingestion
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: data-ingestion-workflows
  namespace: argocd
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: workflows
    app.kubernetes.io/part-of: base-ingestion-apps
spec:
  project: base-layer
  source:
    repoURL: https://github.com/vsem-svoim/base-app-layer.git
    path: data_ingestion/workflows
    targetRevision: HEAD
  destination:
    server: https://kubernetes.default.svc
    namespace: base-data-ingestion
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: data-ingestion-orchestrators
  namespace: argocd
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: orchestrators
    app.kubernetes.io/part-of: base-ingestion-apps
spec:
  project: base-layer
  source:
    repoURL: https://github.com/vsem-svoim/base-app-layer.git
    path: data_ingestion/orchestrators
    targetRevision: HEAD
  destination:
    server: https://kubernetes.default.svc
    namespace: base-data-ingestion
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: data-ingestion-models
  namespace: argocd
  labels:
    app.kubernetes.io/name: data-ingestion
    app.kubernetes.io/component: models
    app.kubernetes.io/part-of: base-ingestion-apps
spec:
  project: base-layer
  source:
    repoURL: https://github.com/vsem-svoim/base-app-layer.git
    path: data_ingestion/models
    targetRevision: HEAD
  destination:
    server: https://kubernetes.default.svc
    namespace: base-data-ingestion
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 2m
