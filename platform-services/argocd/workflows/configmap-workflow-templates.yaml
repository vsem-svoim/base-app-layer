apiVersion: v1
kind: ConfigMap
metadata:
  name: argo-workflow-templates
  namespace: base-ingestion
  labels:
    app.kubernetes.io/name: workflow-templates
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: base-system
data:
  # Include all workflow templates as configmap data
  standard-ingestion-template.yaml: |
    # Content would be the full WorkflowTemplate YAML
    # This allows Airflow to reference templates by name
  
  secure-api-template.yaml: |
    # Full secure API workflow template
    
  bulk-file-template.yaml: |
    # Bulk file processing template
    
  realtime-stream-template.yaml: |
    # Real-time streaming template
    
  resilient-fetch-template.yaml: |
    # Resilient fetch and recovery template
    
  # Workflow execution configurations
  workflow-configs.yaml: |
    # Global workflow configurations
    default_timeout: "4h"
    max_parallel_workflows: 50
    retry_policy: "exponential_backoff"
    
    # Integration endpoints
    airflow_callback_endpoint: "http://airflow-webserver.airflow.svc.cluster.local:8080/api/experimental"
    monitoring_endpoint: "http://base-monitoring-service.base-platform.svc.cluster.local:8080"
    
    # Business SLA configurations
    sla_configurations:
      critical: "5m"
      high: "15m"
      medium: "1h"
      low: "4h"
      
    # Error handling
    error_escalation:
      critical_failures_webhook: "http://airflow-webserver.airflow.svc.cluster.local:8080/api/experimental/dags/error_escalation/dag_runs"
      business_escalation_email: "data-engineering@company.com"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-workflow-executor
  namespace: base-ingestion
  labels:
    app.kubernetes.io/name: argo-workflow-executor
    app.kubernetes.io/component: workflow-execution
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: base-ingestion
  name: argo-workflow-executor-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list"]
- apiGroups: ["argoproj.io"]
  resources: ["workflows", "workflowtemplates"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["base.io"]
  resources: ["agents", "models", "orchestrators", "workflows", "configs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-workflow-executor-binding
  namespace: base-ingestion
subjects:
- kind: ServiceAccount
  name: argo-workflow-executor
  namespace: base-ingestion
roleRef:
  kind: Role
  name: argo-workflow-executor-role
  apiGroup: rbac.authorization.k8s.io
---
# Airflow integration service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow-workflow-trigger
  namespace: airflow
  labels:
    app.kubernetes.io/name: airflow-workflow-trigger
    app.kubernetes.io/component: business-orchestration
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: airflow-argo-integration-role
rules:
- apiGroups: ["argoproj.io"]
  resources: ["workflows", "workflowtemplates"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods", "pods/log", "events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["base.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: airflow-argo-integration-binding
subjects:
- kind: ServiceAccount
  name: airflow-workflow-trigger
  namespace: airflow
roleRef:
  kind: ClusterRole
  name: airflow-argo-integration-role
  apiGroup: rbac.authorization.k8s.io