apiVersion: v1
kind: Namespace
metadata:
  name: argo-workflows
  labels:
    app.kubernetes.io/name: argo-workflows
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo
  namespace: argo-workflows
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["create", "delete", "get"]
- apiGroups: ["argoproj.io"]
  resources: ["workflows", "workflowtemplates", "cronworkflows", "clusterworkflowtemplates"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-cluster-role
subjects:
- kind: ServiceAccount
  name: argo
  namespace: argo-workflows
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: argo-workflows
data:
  config: |
    namespace: argo-workflows
    instanceID: argo-workflows
    parallelism: 20
    workflowDefaults:
      spec:
        serviceAccountName: argo
        ttlStrategy:
          secondsAfterCompletion: 86400
          secondsAfterSuccess: 86400
          secondsAfterFailure: 86400
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-controller
  namespace: argo-workflows
  labels:
    app: workflow-controller
spec:
  selector:
    matchLabels:
      app: workflow-controller
  template:
    metadata:
      labels:
        app: workflow-controller
    spec:
      serviceAccountName: argo
      containers:
      - name: workflow-controller
        image: quay.io/argoproj/workflow-controller:v3.5.5
        command: ["workflow-controller"]
        args:
        - "--configmap=workflow-controller-configmap"
        - "--executor-image=quay.io/argoproj/argoexec:v3.5.5"
        - "--loglevel=info"
        - "--gloglevel=0"
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ARGO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6060
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
          name: healthz
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-server
  namespace: argo-workflows
  labels:
    app: argo-server
spec:
  selector:
    matchLabels:
      app: argo-server
  template:
    metadata:
      labels:
        app: argo-server
    spec:
      serviceAccountName: argo
      containers:
      - name: argo-server
        image: quay.io/argoproj/argocli:v3.5.5
        command: ["argo"]
        args:
        - "server"
        - "--auth-mode=server"
        - "--secure=false"
        ports:
        - containerPort: 2746
          name: web
        livenessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 2746
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: argo-server
  namespace: argo-workflows
  labels:
    app: argo-server
spec:
  type: ClusterIP
  ports:
  - port: 2746
    targetPort: 2746
    name: web
  selector:
    app: argo-server