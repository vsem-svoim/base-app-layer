apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: automated-data-ingestion-platform
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    gitops.automation: "true"
    deployment-type: "automated"
spec:
  generators:
    # Git-based generator for automated discovery
    - git:
        repoURL: https://github.com/vsem-svoim/base-app-layer.git
        revision: main
        directories:
          - path: "data_ingestion"
          - path: "platform-services/ml-platform/*"
          - path: "platform-services/monitoring"
          - path: "platform-services/kustomize/base-layer/*/overlays/dev"
  
  template:
    metadata:
      name: '{{path.basename}}-automated'
      labels:
        app.kubernetes.io/name: '{{path.basename}}'
        app.kubernetes.io/component: 'automated-deployment'
        app.kubernetes.io/managed-by: 'argocd-applicationset'
        deployment-wave: "{{path[1]}}"
      annotations:
        argocd.argoproj.io/sync-wave: "{{path[1]}}"
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack: "platform-deployments"
    spec:
      project: default
      source:
        repoURL: https://github.com/vsem-svoim/base-app-layer.git
        targetRevision: main
        path: '{{path}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: 'base-{{path.basename}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - PrunePropagationPolicy=foreground
          - ApplyOutOfSyncOnly=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
      
      # Health checks for automated validation
      ignoreDifferences:
        - group: apps
          kind: Deployment
          jsonPointers:
            - /spec/replicas
            - /spec/template/spec/containers/0/image
      
      # Custom health checks
      health:
        - group: apps
          kind: Deployment
          check: |
            hs = {}
            if obj.status ~= nil then
              if obj.status.readyReplicas ~= nil and obj.status.readyReplicas > 0 then
                hs.status = "Healthy"
                hs.message = "Deployment has ready replicas"
                return hs
              end
            end
            hs.status = "Progressing"
            hs.message = "Waiting for deployment to be ready"
            return hs
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ml-platform-automated
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  generators:
    - list:
        elements:
          - name: mlflow
            path: platform-services/ml-platform/mlflow
            namespace: mlflow
            priority: "high"
          - name: seldon-core
            path: platform-services/ml-platform/seldon
            namespace: seldon-system
            priority: "high"
          - name: kubeflow
            path: platform-services/ml-platform/kubeflow
            namespace: kubeflow
            priority: "medium"
  
  template:
    metadata:
      name: '{{name}}-automated'
      labels:
        app.kubernetes.io/name: '{{name}}'
        app.kubernetes.io/component: 'ml-platform'
        deployment-priority: '{{priority}}'
      annotations:
        argocd.argoproj.io/sync-wave: "2"
    spec:
      project: default
      source:
        repoURL: https://github.com/vsem-svoim/base-app-layer.git
        targetRevision: main
        path: '{{path}}'
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
        retry:
          limit: 3
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 5m
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: monitoring-platform-automated
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  generators:
    - list:
        elements:
          - name: prometheus
            chart: kube-prometheus-stack
            repoURL: https://prometheus-community.github.io/helm-charts
            targetRevision: "45.7.1"
            namespace: monitoring
          - name: grafana-dashboards
            path: platform-services/monitoring/grafana
            namespace: monitoring
          - name: alertmanager-config
            path: platform-services/monitoring/alerts
            namespace: monitoring
  
  template:
    metadata:
      name: '{{name}}-automated'
      labels:
        app.kubernetes.io/name: '{{name}}'
        app.kubernetes.io/component: 'monitoring'
      annotations:
        argocd.argoproj.io/sync-wave: "3"
    spec:
      project: default
      source:
        repoURL: '{{repoURL | default "https://github.com/vsem-svoim/base-app-layer.git"}}'
        targetRevision: '{{targetRevision | default "main"}}'
        path: '{{path | default ""}}'
        chart: '{{chart | default ""}}'
        helm:
          values: |
            prometheus:
              prometheusSpec:
                storageSpec:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: gp2
                      accessModes: ["ReadWriteOnce"]
                      resources:
                        requests:
                          storage: 50Gi
            grafana:
              persistence:
                enabled: true
                size: 10Gi
              adminPassword: admin123
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
        retry:
          limit: 3
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 5m