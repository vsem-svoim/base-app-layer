---
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    app.kubernetes.io/name: istio-system
    app.kubernetes.io/component: istio
    istio-injection: disabled
---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: control-plane
  namespace: istio-system
spec:
  values:
    global:
      meshID: mesh1
      multiCluster:
        clusterName: platform-cluster
      network: network1
    pilot:
      env:
        EXTERNAL_ISTIOD: false
        PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
        PILOT_ENABLE_REMOTE_JWKS_CACHE: true
        PILOT_SKIP_VALIDATE_TRUST_DOMAIN: true
  components:
    pilot:
      k8s:
        nodeSelector:
          eks.amazonaws.com/nodegroup: platform_system
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        env:
        - name: PILOT_TRACE_SAMPLING
          value: "1.0"
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        nodeSelector:
          eks.amazonaws.com/nodegroup: platform_general
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        service:
          type: ClusterIP
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
          - port: 80
            targetPort: 8080
            name: http2
          - port: 443
            targetPort: 8443
            name: https
          - port: 31400
            targetPort: 31400
            name: tcp
          - port: 15443
            targetPort: 15443
            name: tls
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        nodeSelector:
          eks.amazonaws.com/nodegroup: platform_general
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
  meshConfig:
    accessLogFile: /dev/stdout
    accessLogEncoding: JSON
    defaultConfig:
      gatewayTopology:
        numTrustedProxies: 1
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*_cx_.*"
        - ".*_rq_.*"
        - ".*_rbac_.*"
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway-external
  namespace: istio-system
  labels:
    app: istio-ingressgateway
    istio: ingressgateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
    istio: ingressgateway
  ports:
  - name: status-port
    port: 15021
    targetPort: 15021
  - name: http2
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: base-platform-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "platform.base-app-layer.dev"
    - "airflow.base-app-layer.dev"
    - "mlflow.base-app-layer.dev"
    - "kubeflow.base-app-layer.dev"
    - "grafana.base-app-layer.dev"
    - "vault.base-app-layer.dev"
    tls:
      httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "platform.base-app-layer.dev"
    - "airflow.base-app-layer.dev" 
    - "mlflow.base-app-layer.dev"
    - "kubeflow.base-app-layer.dev"
    - "grafana.base-app-layer.dev"
    - "vault.base-app-layer.dev"
    tls:
      mode: SIMPLE
      credentialName: platform-tls-secret
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: base-platform-vs
  namespace: istio-system
spec:
  hosts:
  - "platform.base-app-layer.dev"
  gateways:
  - base-platform-gateway
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: platform-ui-service.platform-ui.svc.cluster.local
        port:
          number: 80
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: istio-system
spec:
  mtls:
    mode: STRICT
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: base-platform-authz
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
        paths: ["/*"]