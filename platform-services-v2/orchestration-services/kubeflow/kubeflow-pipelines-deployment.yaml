apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeflow-pipelines-api-server
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: kubeflow-pipelines
    app.kubernetes.io/component: api-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeflow-pipelines
      app.kubernetes.io/component: api-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeflow-pipelines
        app.kubernetes.io/component: api-server
        deployment.wave: "2"
    spec:
      serviceAccountName: kubeflow-pipelines
      nodeSelector:
        eks.amazonaws.com/nodegroup: platform_system
      containers:
      - name: api-server
        image: gcr.io/ml-pipeline/api-server:2.14.0
        ports:
        - containerPort: 8888
          name: http
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OBJECTSTORECONFIG_SECURE
          value: "false"
        - name: OBJECTSTORECONFIG_BUCKETNAME
          value: "mlpipeline"
        - name: DBCONFIG_USER
          value: "kubeflow"
        - name: DBCONFIG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kubeflow-mysql
              key: mysql-password
        - name: DBCONFIG_DBNAME
          value: "kubeflow_pipelines"
        - name: DBCONFIG_HOST
          value: "kubeflow-mysql"
        - name: DBCONFIG_PORT
          value: "3306"
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: 1000m
        livenessProbe:
          httpGet:
            path: /apis/v1beta1/healthz
            port: 8888
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /apis/v1beta1/healthz
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 5