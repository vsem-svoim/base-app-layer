---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiali
  namespace: istio-mesh
  labels:
    app: kiali
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kiali
  template:
    metadata:
      labels:
        app: kiali
    spec:
      serviceAccountName: kiali
      containers:
      - name: kiali
        image: quay.io/kiali/kiali:v1.73
        ports:
        - containerPort: 20001
          name: api-port
        - containerPort: 9090
          name: http-metrics
        env:
        - name: ACTIVE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "text"
        - name: AUTH_STRATEGY
          value: "anonymous"
        - name: LOGIN_TOKEN_SIGNING_KEY
          value: "kiali-secret-key-for-signing-tokens-change-me"
        volumeMounts:
        - name: kiali-configuration
          mountPath: /kiali-configuration
        - name: kiali-cert
          mountPath: /kiali-cert
        - name: kiali-secret
          mountPath: /kiali-secret
        resources:
          requests:
            cpu: "10m"
            memory: 64Mi
          limits:
            cpu: "200m"
            memory: 256Mi
      volumes:
      - name: kiali-configuration
        configMap:
          name: kiali
      - name: kiali-cert
        secret:
          secretName: kiali-cert-secret
          optional: true
      - name: kiali-secret
        secret:
          secretName: kiali
          optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: kiali
  namespace: istio-mesh
  labels:
    app: kiali
spec:
  selector:
    app: kiali
  ports:
  - port: 20001
    targetPort: 20001
    name: http-kiali
  - port: 9090
    targetPort: 9090
    name: http-monitoring
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kiali
  namespace: istio-mesh
  labels:
    app: kiali
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kiali
  labels:
    app: kiali
rules:
- apiGroups: [""]
  resources:
  - configmaps
  - endpoints
  - pods/log
  verbs:
  - get
  - list
  - watch
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  - replicationcontrollers
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups: [""]
  resources:
  - pods/portforward
  verbs:
  - create
  - patch
- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups: ["batch"]
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  - security.istio.io
  - extensions.istio.io
  - telemetry.istio.io
  - gateway.networking.k8s.io
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
- apiGroups: ["apps.openshift.io"]
  resources:
  - deploymentconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups: ["project.openshift.io"]
  resources:
  - projects
  verbs:
  - get
- apiGroups: ["route.openshift.io"]
  resources:
  - routes
  verbs:
  - get
- apiGroups: ["authentication.k8s.io"]
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kiali
  labels:
    app: kiali
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kiali
subjects:
- kind: ServiceAccount
  name: kiali
  namespace: istio-mesh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kiali
  namespace: istio-mesh
  labels:
    app: kiali
data:
  config.yaml: |
    istio_namespace: "istio-mesh"
    
    deployment:
      accessible_namespaces: ["**"]
      logger:
        log_level: "info"
    
    server:
      port: 20001
      web_root: "/kiali"
    
    auth:
      strategy: "anonymous"
    
    external_services:
      prometheus:
        url: "http://prometheus.platform-monitoring.svc.cluster.local:9090"
      grafana:
        enabled: true
        url: "http://grafana.platform-monitoring.svc.cluster.local:3000"
        in_cluster_url: "http://grafana.platform-monitoring.svc.cluster.local:3000"
      tracing:
        enabled: false