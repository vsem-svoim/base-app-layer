---
apiVersion: v1
kind: Namespace
metadata:
  name: platform-ui
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: platform-ui
  namespace: platform-ui
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: platform-ui-reader
rules:
- apiGroups: [""]
  resources: ["services", "pods", "nodes"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: platform-ui-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: platform-ui-reader
subjects:
- kind: ServiceAccount
  name: platform-ui
  namespace: platform-ui
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: platform-ui-config
  namespace: platform-ui
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        error_log  /var/log/nginx/error.log warn;
        
        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Upstream services
        upstream argocd {
            server argocd-server.argocd.svc.cluster.local:80;
        }
        
        upstream argo_workflows {
            server argo-server.argo.svc.cluster.local:2746;
        }
        
        upstream vault {
            server vault.vault.svc.cluster.local:8200;
        }
        
        upstream kiali {
            server kiali.istio-system.svc.cluster.local:20001;
        }
        
        upstream kubeflow_ui {
            server kubeflow-ui-server.kubeflow.svc.cluster.local:3000;
        }
        
        upstream kubeflow_api {
            server kubeflow-pipelines-api-server.kubeflow.svc.cluster.local:8888;
        }
        
        upstream seldon {
            server seldon-controller-manager.seldon-system.svc.cluster.local:8080;
        }
        
        upstream seldon_dashboard {
            server seldon-dashboard.seldon-dashboard.svc.cluster.local:80;
        }
        
        upstream superset {
            server apache-superset.superset.svc.cluster.local:8088;
        }
        
        upstream vault_auth {
            server vault-auth-service.platform-ui.svc.cluster.local:5000;
        }
        
        upstream platform_status {
            server platform-status-service.platform-ui.svc.cluster.local:5001;
        }
        
        server {
            listen 80;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Platform Status API for real-time data fetching
            location /api/services/ {
                proxy_pass http://platform_status/api/services/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Connection "";
                proxy_http_version 1.1;
                proxy_buffering off;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            }
            
            # Vault Auth API for dynamic credentials
            location /api/auth/ {
                proxy_pass http://vault_auth/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            }
            
            # Main dashboard
            location / {
                try_files $uri $uri/ /index.html;
            }
            
            # ArgoCD proxy - fixed for proper routing
            location /argocd {
                return 301 /argocd/;
            }
            location /argocd/ {
                proxy_pass http://argocd/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Accept-Encoding "";
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                
                # WebSocket support for ArgoCD
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # Admin access bypass
                proxy_set_header Argocd-Username "admin";
                proxy_set_header Argocd-User-Info "admin@platform.local";
                
                # Fix ArgoCD base URL issues
                sub_filter_once off;
                sub_filter_types text/html application/javascript text/css;
                sub_filter 'href="/' 'href="/argocd/';
                sub_filter 'src="/' 'src="/argocd/';
                sub_filter '"/"' '"/argocd/"';
                sub_filter "'/')" "'/argocd/')";
            }
            
            # Argo Workflows proxy - fixed for assets and API calls
            location /workflows {
                return 301 /workflows/;
            }
            location /workflows/ {
                proxy_pass http://argo_workflows/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Accept-Encoding "";
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                
                # WebSocket support
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
            }
            
            # Handle Argo Workflows API calls
            location /workflows/api/ {
                proxy_pass http://argo_workflows/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
            }
            
            # Vault UI proxy
            location /vault {
                return 301 /vault/;
            }
            location /vault/ {
                proxy_pass http://vault/ui/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Accept-Encoding "";
                proxy_redirect off;
                proxy_buffering off;
                
                # Minimal essential rewrites only
                sub_filter_once off;
                sub_filter_types text/html;
                sub_filter '"/ui/' '"/vault/';
                sub_filter "'/ui/" "'/vault/";
            }
            
            # Vault assets proxy - handle JS/CSS files
            location ~ ^/vault/assets/(.*\.(js|css|png|jpg|gif|ico|woff|woff2|ttf|eot|svg))$ {
                proxy_pass http://vault/ui/assets/$1;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Vault engines-dist assets
            location ~ ^/vault/engines-dist/(.*)$ {
                proxy_pass http://vault/ui/engines-dist/$1;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Vault API proxy - health endpoint
            location /vault/v1/sys/health {
                proxy_pass http://vault/v1/sys/health;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Vault API proxy - seal status endpoint
            location /vault/v1/sys/seal-status {
                proxy_pass http://vault/v1/sys/seal-status;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Additional Vault API endpoints for full functionality
            location /vault/v1/sys/replication/status {
                proxy_pass http://vault/v1/sys/replication/status;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
                add_header Access-Control-Allow-Origin *;
            }
            
            # Airflow proxy
            location /airflow {
                return 301 /airflow/;
            }
            location /airflow/ {
                proxy_pass http://airflow.airflow.svc.cluster.local:8080/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Script-Name /airflow;
                proxy_set_header X-Forwarded-Prefix /airflow;
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                
                # WebSocket support for Airflow
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # Admin access bypass for Airflow
                proxy_set_header Remote-User "admin";
                proxy_set_header Remote-Groups "Admin";
                
                # URL rewriting for assets
                sub_filter_once off;
                sub_filter_types text/html text/css application/javascript;
                sub_filter 'href="/' 'href="/airflow/';
                sub_filter 'src="/' 'src="/airflow/';
                sub_filter '"/"' '"/airflow/"';
            }
            
            # MLflow proxy
            location /mlflow {
                return 301 /mlflow/;
            }
            location /mlflow/ {
                proxy_pass http://mlflow.mlflow.svc.cluster.local:5000/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
            }
            
            # Kiali proxy - already working
            location /kiali {
                return 301 /kiali/;
            }
            location /kiali/ {
                proxy_pass http://kiali/kiali/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_redirect off;
            }
            
            # Kubeflow UI proxy - direct access to UI server
            location /kubeflow {
                return 301 /kubeflow/;
            }
            location /kubeflow/ {
                proxy_pass http://kubeflow_ui/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Accept-Encoding "";
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                
                # WebSocket support for Kubeflow
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # Disable authentication for admin access
                proxy_set_header X-User-Id "admin@platform.local";
                proxy_set_header X-User-Groups "system:admin";
                
                # URL rewriting for assets
                sub_filter_once off;
                sub_filter_types text/html text/css application/javascript;
                sub_filter 'href="/' 'href="/kubeflow/';
                sub_filter 'src="/' 'src="/kubeflow/';
                sub_filter '"/api/' '"/kubeflow/api/';
            }
            
            # Kubeflow API proxy
            location /kubeflow-api/ {
                proxy_pass http://kubeflow_api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
            }
            
            # Seldon Analytics UI proxy
            location /seldon {
                return 301 /seldon/;
            }
            location /seldon/ {
                proxy_pass http://seldon_dashboard/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Accept-Encoding "";
                proxy_redirect off;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                
                # WebSocket support for Seldon Analytics
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # Admin access bypass
                proxy_set_header X-User-Id "admin@platform.local";
                proxy_set_header X-User-Groups "system:admin";
                
                # URL rewriting for assets
                sub_filter_once off;
                sub_filter_types text/html text/css application/javascript;
                sub_filter 'href="/' 'href="/seldon/';
                sub_filter 'src="/' 'src="/seldon/';
            }
            
            # Superset proxy - strip /superset and proxy to root
            location /superset {
                return 301 /superset/;
            }
            location /superset/ {
                proxy_pass http://superset/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_buffering off;
                proxy_read_timeout 86400;
                proxy_send_timeout 86400;
                
                # WebSocket support for Superset
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                
                # Fix redirects from Superset to include /superset prefix
                proxy_redirect ~^/(.*)$ /superset/$1;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-ui
  namespace: platform-ui
  labels:
    app: platform-ui
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform-ui
  template:
    metadata:
      labels:
        app: platform-ui
        version: v1
    spec:
      serviceAccountName: platform-ui
      nodeSelector:
        eks.amazonaws.com/nodegroup: platform_system
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-html
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: platform-ui-config
      - name: nginx-html
        configMap:
          name: platform-ui-html-config
---
apiVersion: v1
kind: Service
metadata:
  name: platform-ui
  namespace: platform-ui
  labels:
    app: platform-ui
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  selector:
    app: platform-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: platform-ui-alb
  namespace: platform-ui
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/whitelist-source-range: "72.79.77.223/32"
    alb.ingress.kubernetes.io/tags: Environment=dev,Project=base-app-layer,Owner=platform-engineering
spec:
  rules:
  - host: platform.base-app-layer.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: platform-ui
            port:
              number: 80
  - host: k8s-platform-platform-909bd21b57-121932925.us-east-1.elb.amazonaws.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: platform-ui
            port:
              number: 80