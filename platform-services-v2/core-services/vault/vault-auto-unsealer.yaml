---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-auto-unsealer
  namespace: vault
  labels:
    app: vault-auto-unsealer
    component: auto-unsealer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-auto-unsealer
  template:
    metadata:
      labels:
        app: vault-auto-unsealer
    spec:
      serviceAccountName: vault-init
      containers:
      - name: vault-auto-unsealer
        image: hashicorp/vault:1.15.2
        command:
        - sh
        - -c
        - |
          export VAULT_ADDR="http://vault.vault.svc.cluster.local:8200"
          
          echo "🤖 Starting Vault auto-unsealer daemon..."
          
          while true; do
            # Check if Vault is sealed
            if vault status 2>/dev/null | grep -q "Sealed.*true"; then
              echo "🔓 Vault is sealed, attempting to unseal..."
              
              # Get unseal keys from secret
              if kubectl get secret vault-unseal-keys -n vault >/dev/null 2>&1; then
                KEY1=$(kubectl get secret vault-unseal-keys -n vault -o jsonpath='{.data.key1}' | base64 -d 2>/dev/null || echo "")
                KEY2=$(kubectl get secret vault-unseal-keys -n vault -o jsonpath='{.data.key2}' | base64 -d 2>/dev/null || echo "")
                KEY3=$(kubectl get secret vault-unseal-keys -n vault -o jsonpath='{.data.key3}' | base64 -d 2>/dev/null || echo "")
                
                if [ -n "$KEY1" ] && [ -n "$KEY2" ] && [ -n "$KEY3" ]; then
                  vault operator unseal "$KEY1" >/dev/null 2>&1 || true
                  vault operator unseal "$KEY2" >/dev/null 2>&1 || true
                  vault operator unseal "$KEY3" >/dev/null 2>&1 || true
                  
                  # Check if unsealing was successful
                  if vault status 2>/dev/null | grep -q "Sealed.*false"; then
                    echo "✅ Vault successfully unsealed at $(date)"
                  else
                    echo "❌ Failed to unseal Vault at $(date)"
                  fi
                else
                  echo "❌ Could not retrieve unseal keys from secret"
                fi
              else
                echo "❌ Vault unseal keys secret not found"
              fi
            elif vault status 2>/dev/null | grep -q "Sealed.*false"; then
              echo "✅ Vault is healthy and unsealed at $(date)"
            else
              echo "⚠️  Could not determine Vault status at $(date)"
            fi
            
            # Wait before next check
            sleep 60
          done
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        env:
        - name: VAULT_SKIP_VERIFY
          value: "true"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "ps aux | grep -v grep | grep vault"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "vault status -address=http://vault.vault.svc.cluster.local:8200 >/dev/null 2>&1"
          initialDelaySeconds: 10
          periodSeconds: 10