---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: base-layer-applications
  namespace: argocd
  labels:
    app.kubernetes.io/name: base-layer-applicationset
    app.kubernetes.io/component: applicationset-controller
spec:
  generators:
  - list:
      elements:
      # Wave 3: Base Application Services
      - module: data-services
        name: data-services
        namespace: data-services
        wave: "3"
        cluster: base
        description: "Data Services - BASE module integration gateway"
        
      # Wave 4: Data Foundation Modules
      - module: data_ingestion
        name: data-ingestion
        namespace: base-data-ingestion
        wave: "4"
        cluster: base
        description: "Multi-protocol data acquisition with 100GB/hour throughput"
      - module: data_quality
        name: data-quality
        namespace: base-data-quality
        wave: "4"
        cluster: base
        description: "Validation, cleaning, and quality assurance"
      - module: data_storage
        name: data-storage
        namespace: base-data-storage
        wave: "4"
        cluster: base
        description: "Distributed storage with lifecycle management"
      - module: data_security
        name: data-security
        namespace: base-data-security
        wave: "4"
        cluster: base
        description: "Encryption, classification, and access control"
      
      # Wave 5: Processing & Analytics Modules
      - module: feature_engineering
        name: feature-engineering
        namespace: base-feature-engineering
        wave: "5"
        cluster: base
        description: "ML feature extraction and transformation"
      - module: multimodal_processing
        name: multimodal-processing
        namespace: base-multimodal-processing
        wave: "5"
        cluster: base
        description: "Text, image, geospatial, time-series processing"
      - module: data_streaming
        name: data-streaming
        namespace: base-data-streaming
        wave: "5"
        cluster: base
        description: "Real-time stream processing with Kafka"
      - module: quality_monitoring
        name: quality-monitoring
        namespace: base-quality-monitoring
        wave: "5"
        cluster: base
        description: "Continuous monitoring and anomaly detection"
      
      # Wave 6: Orchestration & Management Modules
      - module: pipeline_management
        name: pipeline-management
        namespace: base-pipeline-management
        wave: "6"
        cluster: base
        description: "Workflow orchestration and dependency management"
      - module: event_coordination
        name: event-coordination
        namespace: base-event-coordination
        wave: "6"
        cluster: base
        description: "Event-driven architecture and saga patterns"
      - module: metadata_discovery
        name: metadata-discovery
        namespace: base-metadata-discovery
        wave: "6"
        cluster: base
        description: "Data cataloging and lineage tracking"
      - module: schema_contracts
        name: schema-contracts
        namespace: base-schema-contracts
        wave: "6"
        cluster: base
        description: "Schema management and data contracts"
      
      # Wave 7: Distribution & Control Modules
      - module: data_distribution
        name: data-distribution
        namespace: base-data-distribution
        wave: "7"
        cluster: base
        description: "API management and data delivery"
      - module: data_control
        name: data-control
        namespace: base-data-control
        wave: "7"
        cluster: base
        description: "Governance and control plane services"
        
  template:
    metadata:
      name: '{{name}}'
      namespace: argocd
      labels:
        app.kubernetes.io/name: '{{module}}'
        app.kubernetes.io/component: base-layer
        deployment.wave: '{{wave}}'
        target.cluster: '{{cluster}}'
      annotations:
        argocd.argoproj.io/sync-wave: '{{wave}}'
        argocd.argoproj.io/compare-options: ServerSideDiff=true
      finalizers:
        - resources-finalizer.argocd.argoproj.io
        
    spec:
      project: base-layer
      
      source:
        repoURL: ${GITHUB_REPO}
        path: '{{module}}'
        targetRevision: ${BRANCH}
        
      destination:
        server: ${BASE_CLUSTER_SERVER}
        namespace: '{{namespace}}'
        
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: false
        syncOptions:
          - CreateNamespace=true
          - PruneLast=true
          - ApplyOutOfSyncOnly=true
          - RespectIgnoreDifferences=true
          - ServerSideApply=true
        retry:
          limit: 2
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 30s
            
      revisionHistoryLimit: 3
      
      ignoreDifferences:
      - group: apps
        kind: Deployment
        jsonPointers:
        - /spec/replicas
      - group: ""
        kind: Service
        jsonPointers:
        - /spec/clusterIP
      - group: networking.k8s.io
        kind: Ingress
        jsonPointers:
        - /status/loadBalancer/ingress