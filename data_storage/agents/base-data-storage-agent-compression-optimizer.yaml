apiVersion: v1
kind: ServiceAccount
metadata:
  name: base-compression-optimizer-sa
  namespace: base-data-storage
  labels:
    app.kubernetes.io/name: base-compression-optimizer
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: base-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: base-data-storage-agent-compression-optimizer
  namespace: base-data-storage
  labels:
    app.kubernetes.io/name: base-compression-optimizer
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: base-system
    base.io/category: data_storage
    base.io/type: agent
    base.io/function: compression-optimizer
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: base-compression-optimizer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: base-compression-optimizer
        app.kubernetes.io/component: storage
        app.kubernetes.io/part-of: base-system
        base.io/category: data_storage
        base.io/type: agent
    spec:
      serviceAccountName: base-compression-optimizer-sa
      nodeSelector:
        NodeGroup: base-data-services
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: compression-optimizer
        image: python:3.13.7-slim
        command: ["/bin/sh"]
        args: ["-c", "echo 'Base Data Storage Compression Optimizer Agent Starting...' && python -m http.server 8080 --bind 0.0.0.0"]
        ports:
        - name: http-health
          containerPort: 8080
        - name: http-metrics
          containerPort: 9090
        env:
        - name: COMPRESSION_ALGORITHM
          value: "adaptive"
        - name: TARGET_COMPRESSION_RATIO
          value: "0.7"
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 60
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 30
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: config-volume
        configMap:
          name: base-compression-optimizer-config
---
apiVersion: v1
kind: Service
metadata:
  name: base-compression-optimizer-service
  namespace: base-data-storage
spec:
  selector:
    app.kubernetes.io/name: base-compression-optimizer
  ports:
  - name: http-health
    port: 8080
  - name: http-metrics
    port: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: base-compression-optimizer-config
  namespace: base-data-storage
data:
  compression-optimizer.yaml: |
    compression_optimizer:
      name: "base-compression-optimizer"
      responsibility: "Intelligent data compression and storage optimization"
      compression_algorithms:
        lz4:
          speed: "very_fast"
          compression_ratio: 0.4
          use_case: "real_time_data"
        zstd:
          speed: "fast" 
          compression_ratio: 0.6
          use_case: "general_purpose"
        brotli:
          speed: "slow"
          compression_ratio: 0.8
          use_case: "archival_data"
      financial_optimization:
        market_data:
          algorithm: "lz4"
          real_time_requirement: true
        trading_data:
          algorithm: "zstd"
          encryption_required: true
        regulatory_data:
          algorithm: "brotli"
          maximum_compression: true