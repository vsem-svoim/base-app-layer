apiVersion: v1
kind: ConfigMap
metadata:
  name: testing-config
  namespace: base-data-ingestion
  labels:
    app.kubernetes.io/name: testing-config
    app.kubernetes.io/component: testing
data:
  testing-config.yaml: |
    # Kubernetes-optimized testing configuration
    agent_tests:
      kubernetes_integration:
        test_types:
          - pod_health_checks
          - service_discovery
          - resource_scaling
          - network_policies
        test_scenarios:
          - name: "pod_scaling_validation"
            description: "Validate AI agent pod scaling behavior"
            parameters:
              min_replicas: 1
              max_replicas: 10
              cpu_threshold: 70
              memory_threshold: 80
            expected_results:
              scaling_responsiveness: "<30s"
              resource_efficiency: ">85%"
    
    performance_tests:
      kubernetes_performance:
        scenarios:
          - cluster_resource_utilization
          - pod_startup_times
          - service_mesh_latency
          - persistent_volume_performance
        benchmarks:
          pod_startup_time: "<15s"
          service_response_time: "<100ms"
          pv_iops: ">1000"
          network_throughput: ">1Gbps"
    
    monitoring:
      prometheus_metrics:
        enabled: true
        scrape_interval: "30s"
        retention: "7d"
      kubernetes_events:
        enabled: true
        event_retention: "24h"
      alerting:
        enabled: true
        webhook_url: "http://alertmanager:9093/api/v1/alerts"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: testing-environment-config
  namespace: base-data-ingestion
data:
  ENVIRONMENT: "kubernetes"
  NAMESPACE: "base-data-ingestion"
  CLUSTER_NAME: "base-cluster"
  TESTING_MODE: "automated"
  LOG_LEVEL: "INFO"
  METRICS_ENABLED: "true"
  PROMETHEUS_ENDPOINT: "http://prometheus:9090"
  GRAFANA_ENDPOINT: "http://grafana:3000"